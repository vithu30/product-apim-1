/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * The version of the OpenAPI document: v1.1
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.store.api.v1;

import org.wso2.am.integration.clients.store.api.ApiCallback;
import org.wso2.am.integration.clients.store.api.ApiClient;
import org.wso2.am.integration.clients.store.api.ApiException;
import org.wso2.am.integration.clients.store.api.ApiResponse;
import org.wso2.am.integration.clients.store.api.Configuration;
import org.wso2.am.integration.clients.store.api.Pair;
import org.wso2.am.integration.clients.store.api.ProgressRequestBody;
import org.wso2.am.integration.clients.store.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.wso2.am.integration.clients.store.api.v1.dto.AlertsInfoDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.AlertsInfoResponseDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ErrorDTO;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AlertSubscriptionsApi {
    private ApiClient localVarApiClient;

    public AlertSubscriptionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AlertSubscriptionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getSubscribedAlertTypes
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The list of subscribed alert types are returned.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An error occurred while retrieving subscribed alert types by user.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSubscribedAlertTypesCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/alert-subscriptions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSubscribedAlertTypesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getSubscribedAlertTypesCall(_callback);
        return localVarCall;

    }

    /**
     * Get the list of API Store alert types subscribed by the user. 
     * This operation is used to get the list of subscribed alert types by the user. 
     * @return AlertsInfoDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The list of subscribed alert types are returned.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An error occurred while retrieving subscribed alert types by user.  </td><td>  -  </td></tr>
     </table>
     */
    public AlertsInfoDTO getSubscribedAlertTypes() throws ApiException {
        ApiResponse<AlertsInfoDTO> localVarResp = getSubscribedAlertTypesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Get the list of API Store alert types subscribed by the user. 
     * This operation is used to get the list of subscribed alert types by the user. 
     * @return ApiResponse&lt;AlertsInfoDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The list of subscribed alert types are returned.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An error occurred while retrieving subscribed alert types by user.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlertsInfoDTO> getSubscribedAlertTypesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getSubscribedAlertTypesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AlertsInfoDTO>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the list of API Store alert types subscribed by the user.  (asynchronously)
     * This operation is used to get the list of subscribed alert types by the user. 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The list of subscribed alert types are returned.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An error occurred while retrieving subscribed alert types by user.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSubscribedAlertTypesAsync(final ApiCallback<AlertsInfoDTO> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSubscribedAlertTypesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AlertsInfoDTO>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for subscribeToAlerts
     * @param body The alerts list and the email list to subscribe. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. Successful response with the newly subscribed alerts.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid Request or request validation failure.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An internal server error occurred while subscribing to alerts.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call subscribeToAlertsCall(AlertsInfoDTO body, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/alert-subscriptions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call subscribeToAlertsValidateBeforeCall(AlertsInfoDTO body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling subscribeToAlerts(Async)");
        }
        

        okhttp3.Call localVarCall = subscribeToAlertsCall(body, _callback);
        return localVarCall;

    }

    /**
     * Subscribe to the selected alert types by the user. 
     * This operation is used to get the list of subscribed alert types by the user. 
     * @param body The alerts list and the email list to subscribe. (required)
     * @return AlertsInfoResponseDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. Successful response with the newly subscribed alerts.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid Request or request validation failure.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An internal server error occurred while subscribing to alerts.  </td><td>  -  </td></tr>
     </table>
     */
    public AlertsInfoResponseDTO subscribeToAlerts(AlertsInfoDTO body) throws ApiException {
        ApiResponse<AlertsInfoResponseDTO> localVarResp = subscribeToAlertsWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * Subscribe to the selected alert types by the user. 
     * This operation is used to get the list of subscribed alert types by the user. 
     * @param body The alerts list and the email list to subscribe. (required)
     * @return ApiResponse&lt;AlertsInfoResponseDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. Successful response with the newly subscribed alerts.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid Request or request validation failure.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An internal server error occurred while subscribing to alerts.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlertsInfoResponseDTO> subscribeToAlertsWithHttpInfo(AlertsInfoDTO body) throws ApiException {
        okhttp3.Call localVarCall = subscribeToAlertsValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<AlertsInfoResponseDTO>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Subscribe to the selected alert types by the user.  (asynchronously)
     * This operation is used to get the list of subscribed alert types by the user. 
     * @param body The alerts list and the email list to subscribe. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. Successful response with the newly subscribed alerts.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid Request or request validation failure.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error An internal server error occurred while subscribing to alerts.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call subscribeToAlertsAsync(AlertsInfoDTO body, final ApiCallback<AlertsInfoResponseDTO> _callback) throws ApiException {

        okhttp3.Call localVarCall = subscribeToAlertsValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<AlertsInfoResponseDTO>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for unsubscribeAllAlerts
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The user is unsubscribed from the alerts successfully.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unsubscribeAllAlertsCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/alert-subscriptions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call unsubscribeAllAlertsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = unsubscribeAllAlertsCall(_callback);
        return localVarCall;

    }

    /**
     * Unsubscribe user from all the alert types. 
     * This operation is used to unsubscribe the respective user from all the alert types. 
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The user is unsubscribed from the alerts successfully.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  </td><td>  -  </td></tr>
     </table>
     */
    public void unsubscribeAllAlerts() throws ApiException {
        unsubscribeAllAlertsWithHttpInfo();
    }

    /**
     * Unsubscribe user from all the alert types. 
     * This operation is used to unsubscribe the respective user from all the alert types. 
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The user is unsubscribed from the alerts successfully.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> unsubscribeAllAlertsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = unsubscribeAllAlertsValidateBeforeCall(null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Unsubscribe user from all the alert types.  (asynchronously)
     * This operation is used to unsubscribe the respective user from all the alert types. 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The user is unsubscribed from the alerts successfully.  </td><td>  * Content-Type - The content type of the body.  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unsubscribeAllAlertsAsync(final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = unsubscribeAllAlertsValidateBeforeCall(_callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
